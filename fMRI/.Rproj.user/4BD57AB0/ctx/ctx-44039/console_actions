{
    "type": [
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "Warning messages:\n",
        "1: closing unused connection 7 (<-kubernetes.docker.internal:11692) \n",
        "2: closing unused connection 6 (<-kubernetes.docker.internal:11692) \n",
        "3: closing unused connection 5 (<-kubernetes.docker.internal:11692) \n",
        "4: closing unused connection 4 (<-kubernetes.docker.internal:11692) \n",
        "5: closing unused connection 3 (<-kubernetes.docker.internal:11692) \n",
        "6: ",
        "In train.default(x, y, weights = w, ...) :",
        "\n ",
        " You are trying to do regression and your outcome only has two possible values Are you trying to do classification? If so, use a 2 level factor as your outcome column.\n",
        "> ",
        "?randomForest",
        "> ",
        "numWorkers <- detectCores()  ",
        "> ",
        "cl <- makeCluster(numWorkers)",
        "> ",
        "registerDoParallel(cl)",
        "> ",
        "rf <- foreach(ntree=rep(100, 4), .combine=randomForest::combine,",
        "+ ",
        "              .multicombine=TRUE, .packages='randomForest') %dopar% {",
        "+ ",
        "                randomForest(x, y, ntree=ntree)",
        "+ ",
        "              }",
        "Error in { : task 1 failed - \"oggetto 'x' non trovato\"\n",
        "> ",
        "rf <- foreach(ntree=rep(100, 4), .combine=randomForest::combine,",
        "+ ",
        "              .multicombine=TRUE, .packages='randomForest') %dopar% {",
        "+ ",
        "                randomForest(mat_sana[,-3], mat_sana[,3], ntree=ntree)",
        "+ ",
        "              }",
        "> ",
        "rf <- foreach(ntree=rep(1, 4), ",
        "+ ",
        "              .combine=randomForest::combine,",
        "+ ",
        "              .multicombine=TRUE, ",
        "+ ",
        "              .packages='randomForest') %dopar% {",
        "+ ",
        "                randomForest(mat_sana[,-3], mat_sana[,3], ntree=ntree)",
        "+ ",
        "              }",
        "> ",
        "stopCluster(cl)",
        "\nRestarting R session...\n\n"
    ]
}